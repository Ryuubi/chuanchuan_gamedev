{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","type","AudioClip","onLoad","enabled","accLeft","accRight","xSpeed","director","getCollisionManager","enabledDebugDraw","jumpAction","setJumpAction","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","touchReceiver","Canvas","instance","node","onTouchStart","onCollisionEnter","other","self","console","log","Global","arrayfood","length","slice","hasConsecutive","push","arr","amount","last","count","i","pop","clearArray","onDestroy","off","onEnable","getPhysicsManager","onDisable","event","keyCode","macro","KEY","a","d","stopMove","stopAllActions","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","startMoveAt","pos","setPosition","runAction","getCenterPos","centerPos","x","y","height","audioEngine","playEffect","update","dt","Math","abs","parent","width"],"mappings":"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","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\n    extends: cc.Component,\n    \n    properties: {\n        // 主角跳跃高度\n        jumpHeight: 0,\n        // 主角跳跃持续时间\n        jumpDuration: 0,\n        // 最大移动速度\n        maxMoveSpeed: 0,\n        // 加速度\n        accel: 0,\n        // 跳跃音效资源\n        jumpAudio: {\n            default: null,\n            type: cc.AudioClip\n        },\n    },\n\n\n    onLoad: function() {\n\n\n        this.enabled=false;\n        // 加速度方向开关\n        this.accLeft = false;\n        this.accRight = false;\n        // 主角当前水平方向速度\n        this.xSpeed = 0;\n\n        cc.director.getCollisionManager().enabled = true;\n        cc.director.getCollisionManager().enabledDebugDraw = true;\n\n        // 初始化跳跃动作\n        this.jumpAction = this.setJumpAction();\n\n        // this.node.on(console.log('testingtouch'), this.testingtouch ,this);\n        // this.node.on(cc.Node.EventType.TOUCH_START, () => { \n        //     console.log(\"TOUCH_START\");\n        // }, this, true);\n\n        // this.node.on(cc.Node.EventType.TOUCH_MOVE, () => {\n        //     console.log(\"TOUCH_MOVE\");\n        // }, this, true);\n\n        // this.node.on(cc.Node.EventType.TOUCH_END, () => {\n        //     console.log(\"TOUCH_END\");\n        // }, this, true);\n\n        // this.node.on(cc.Node.EventType.TOUCH_CANCEL, () => {\n        //     console.log(\"TOUCH_CANCEL\");\n        // }, this, true);\n        \n\n        // 初始化键盘输入监听\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);    \n\n        //Touch\n\n        var touchReceiver = cc.Canvas.instance.node\n\n        touchReceiver.on('touchStart',this.onTouchStart,this);\n    },\n\n    onCollisionEnter:function(other,self){\n        console.log('hit');\n        \n        if(Global.arrayfood.length == 6){\n            Global.arrayfood.slice(0,5)\n            console.log(Global.arrayfood);\n            \n            console.log(this.hasConsecutive(Global.arrayfood,3));\n\n            \n        }\n        else{\n            Global.arrayfood.push(\"Apple\");\n            console.log(Global.arrayfood);\n            console.log(this.hasConsecutive(Global.arrayfood,3));\n        }\n\n    },\n\n     hasConsecutive:function(arr, amount) {\n        var last = null;\n        var count = 0;\n        for (var i = 0; i < arr.length; i++) {\n            if (arr[i] != last) {\n                last = arr[i];\n                count = 0;\n            }\n            count += 1;\n            if (amount <= count) {\n                Global.arrayfood.pop();\n                Global.arrayfood.pop();\n                Global.arrayfood.pop();\n                console.log(\"hasConsecutive end player\", Global.arrayfood);\n                return true;\n                \n            }\n        }\n        return false;\n    },\n\n    clearArray: function(){\n        Global.arrayfood = []\n    },\n\n\n    \n\n    onDestroy () {\n\n        // 取消键盘输入监听\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n\n        //Touch\n\n        var touchReceiver = cc.Canvas.instance.node\n\n        touchReceiver.off('touchStart',this.onTouchStart,this);\n    },  \n\n    onEnable: function () {\n        cc.director.getCollisionManager().enabled = true;\n        cc.director.getCollisionManager().enabledDebugDraw = true;\n        cc.director.getPhysicsManager().enabled = true;\n    },\n    \n    onDisable: function () {\n        cc.director.getCollisionManager().enabled = false;\n        cc.director.getCollisionManager().enabledDebugDraw = false;\n        \n    },\n    \n    // onCollisionEnter: function (other, self) {\n    //     this.label.string = 'Collision on tag : ' + self.tag;\n    // },\n\n\n    onKeyDown (event) {\n        // set a flag when key pressed\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.accLeft = true;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = true;\n                break;\n        }\n    },\n\n\n    onKeyUp (event) {\n        // unset a flag when key released\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.accLeft = false;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = false;\n                break;\n\n        }\n    },\n\n\n        \n    stopMove: function (event) {\n        this.node.stopAllActions();\n    },\n\n\n    setJumpAction: function () {\n        // 跳跃上升\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\n        // 下落\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\n        // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\n        var callback = cc.callFunc(this.playJumpSound, this);\n        //Rotate\n        // var actionBy = cc.rotateBy(1,160);\n        // 不断重复，而且每次完成落地动作后调用回调来播放声音\n        return cc.repeatForever(cc.sequence(jumpUp,jumpDown, callback));\n    },\n\n    \n    startMoveAt: function (pos) {\n        this.enabled = true;\n        this.xSpeed = 0;\n        this.node.setPosition(pos);\n        this.node.runAction(this.setJumpAction());\n    },\n\n    getCenterPos: function(){\n        var centerPos=cc.v2(this.node.x , this.node.y + this.node.height/2);\n        return centerPos\n    },\n\n\n    playJumpSound: function () {\n        // 调用声音引擎播放声音\n        cc.audioEngine.playEffect(this.jumpAudio, false);\n    },\n\n\n\n  \n\n    update: function (dt) {\n        // 根据当前加速度方向每帧更新速度\n        if (this.accLeft) {\n            this.xSpeed -= this.accel * dt;\n        } else if (this.accRight) {\n            this.xSpeed += this.accel * dt;\n        }\n        // 限制主角的速度不能超过最大值\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\n            // if speed reach limit, use max speed with current direction\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n        }\n\n        // 根据当前速度更新主角的位置\n        this.node.x += this.xSpeed * dt;\n\n        if (this.node.x > this.node.parent.width/2){\n            this.node.x= this.node.parent.width/2;\n            this.xSpeed =0;\n        }\n        else if (this.node.x < -this.node.parent.width/2){\n            this.node.x= -this.node.parent.width/2;\n            this.xSpeed =0;\n        }\n    },\n});\n\n\n"]}