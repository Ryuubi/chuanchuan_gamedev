{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Stone.js"],"names":["Spear","require","cc","Class","extends","Component","properties","start","_timer","update","dt","pos","node","getPosition","Global","gameEnd","stopMoveAt","x","y","destroy","setPosition","onLoad","moveleftway","moveFood","runAction","moveleft","moveBy","v2","repeatForever","onCollisionEnter","other","self","console","log","stone","stopAllActions"],"mappings":";;;;;;AAAA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY,EAHP;;AAMLC,WAAO,iBAAY;AACf,aAAKC,MAAL,GAAc,GAAd;AACD,KARE;;AAUHC,YAAQ,gBAAUC,EAAV,EAAc;AACpB,aAAKF,MAAL,IAAeE,EAAf;AACA,YAAIC,MAAM,CAAV;AACA,YAAK,KAAKH,MAAL,IAAe,GAApB,EAA0B;AACtBG,kBAAM,KAAKC,IAAL,CAAUC,WAAV,EAAN;AACA;;;AAGA,gBAAGC,OAAOC,OAAP,IAAkB,CAArB,EAAuB;AACnB,qBAAKC,UAAL;AACH,aAFD,MAIK,IAAIL,IAAIM,CAAJ,IAAS,CAAC,GAAV,IAAiBN,IAAIO,CAAJ,IAAS,GAA9B,EAAkC;AACnC;AACA,qBAAKN,IAAL,CAAUO,OAAV;AAGH,aALI,MAOA,IAAIR,IAAIM,CAAJ,IAAS,CAAC,GAAV,IAAiBN,IAAIO,CAAJ,IAAS,GAA9B,EAAkC;AACnC;AACA,qBAAKN,IAAL,CAAUQ,WAAV,CAAsB,GAAtB,EAA0BT,IAAIO,CAA9B;AACA;;AAGH;AAEJ;AAIF,KAzCE;;AA2CLG,YAAQ,kBAAW;;AAGf,YAAIC,cAAc,KAAKC,QAAL,EAAlB;AACA,aAAKX,IAAL,CAAUY,SAAV,CAAoBF,WAApB;AAEH,KAjDI;;AAmDLC,cAAU,oBAAU;;AAEhB,YAAIE,WAAYvB,GAAGwB,MAAH,CAAU,CAAV,EAAaxB,GAAGyB,EAAH,CAAM,CAAC,GAAP,EAAW,CAAX,CAAb,CAAhB;AACA,eAAOzB,GAAG0B,aAAH,CAAiBH,QAAjB,CAAP;AAEH,KAxDI;;AA0DLI,sBAAkB,0BAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACrCC,gBAAQC,GAAR,CAAY,KAAZ;AACAnB,eAAOoB,KAAP,GAAe,CAAf;AAGH,KA/DI;;AAiELlB,gBAAY,sBAAY;AACpB,aAAKJ,IAAL,CAAUuB,cAAV;AACH;;AAnEI,CAAT","file":"Stone.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["const Spear = require('Spear');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n    \r\n    properties: {\r\n    },\r\n\r\n    start: function () {\r\n        this._timer = 0.0;\r\n      },\r\n    \r\n      update: function (dt) {\r\n        this._timer += dt;\r\n        var pos = 0\r\n        if ( this._timer >= 0.0 ) {\r\n            pos = this.node.getPosition();\r\n            // console.log(pos + \" finding position\")\r\n\r\n            \r\n            if(Global.gameEnd == 1){\r\n                this.stopMoveAt();\r\n            }\r\n\r\n            else if( pos.x <= -875 && pos.y == 309){\r\n                // this.node.setPosition(550,pos.y)\r\n                this.node.destroy();\r\n\r\n                \r\n            }\r\n\r\n            else if( pos.x <= -750 && pos.y == 105){\r\n                // console.log(pos + \"before reset position\")\r\n                this.node.setPosition(450,pos.y)\r\n                // console.log(this.node.getPosition()+ \"after reset position\")\r\n\r\n                \r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n      },\r\n\r\n    onLoad: function() {\r\n       \r\n\r\n        var moveleftway = this.moveFood();\r\n        this.node.runAction(moveleftway);\r\n\r\n    },\r\n\r\n    moveFood: function(){\r\n\r\n        var moveleft =  cc.moveBy(4, cc.v2(-800,0));\r\n        return cc.repeatForever(moveleft);\r\n\r\n    },\r\n\r\n    onCollisionEnter: function (other, self) {\r\n        console.log('hit');\r\n        Global.stone = 1\r\n\r\n        \r\n    },\r\n\r\n    stopMoveAt: function () {\r\n        this.node.stopAllActions();\r\n    },\r\n\r\n\r\n\r\n\r\n});\r\n"]}