{"version":3,"sources":["Game.js"],"names":["Player","require","Star","Spear","Game","cc","Class","extends","Component","properties","player","default","type","spear","SpearNode","Node","onLoad","node","on","EventType","TOUCH_START","console","log","Global","reset","callback","count","unschedule","intervalSetting","schedule","TOUCH_MOVE","TOUCH_END","startMoveAt","resetCount","TOUCH_CANCEL","enabled","score","starPool","NodePool","ApplePool","OrangePool","onStartGame","btnNode","x","GameOver","active","update","dt","timer","starDuration","gameOver"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["\nconst Player = require('Player');\nconst Star = require('Star');\nconst Spear = require('Spear');\nvar Game = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 这个属性引用了星星预制资源\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: Player\n        },\n        spear: {\n            default: null,\n            type: Spear\n        },\n        SpearNode: {\n            default: null,\n            type: cc.Node\n        },\n\n\n    },\n\n    onLoad: function () {\n        // 获取地平面的 y 轴坐标\n        // this.groundY = this.ground.y + this.ground.height/2;\n        // 初始化计时器\n    \n\n        this.node.on(cc.Node.EventType.TOUCH_START, () => { \n            console.log(\"TOUCH_START\")\n            Global.reset = 0;\n    \n                // this.schedule(function() {\n                //     // Here `this` is referring to the component\n                //     console.log(this.intervalSetting());\n                // }, 1);\n\n                this.callback = function () {\n                    if (Global.count === 3 || Global.reset == 1) {\n                        // Cancel this timer at the sixth call-back\n                        this.unschedule(this.callback);\n\n                    }\n                    else if(Global.count < 3 || Global.reset == 0){\n                        this.spear.intervalSetting();\n                        console.log(Global.count);\n\n                    }\n\n\n                    \n                \n                }\n                this.schedule(this.callback, 0.5);\n            \n\n\n        }, this, true);\n\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, () => {\n            console.log(\"TOUCH_MOVE\");\n            \n\n        }, this, true);\n\n        this.node.on(cc.Node.EventType.TOUCH_END, () => {\n            console.log(\"TOUCH_END\");\n            this.spear.startMoveAt();\n            this.spear.resetCount();\n\n        }, this, true);\n\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, () => {\n            console.log(\"TOUCH_CANCEL\");\n            this.spear.resetCount();\n        }, this, true);\n\n\n        this.enabled=false;\n        // 初始化计分\n        this.score = 0;\n\n        // initialize star and score pool\n        this.starPool = new cc.NodePool('Star');\n        this.ApplePool = new cc.NodePool('Apple');\n        this.OrangePool = new cc.NodePool('Orange');\n    },\n\n    intervalSetting: function() {\n  \n      \n        Global.count += 1;\n        Global.reset = 0;\n        return Global.count;\n    \n},\n\n    resetCount: function(){\n        Global.count = 0;\n        Global.reset = 1;\n\n        return Global.reset; \n\n\n    },\n\n\n    onStartGame: function(){\n\n        this.enabled=true\n\n        this.btnNode.x = 3000;\n        this.GameOver.active = false;\n\n\n        \n    },\n    \n\n\n\n    update: function (dt) {\n        // 每帧更新计时器，超过限度还没有生成新的星星\n        // 就会调用游戏失败逻辑\n        if (this.timer > this.starDuration) {\n            this.gameOver();\n            this.enabled = false;   // disable gameOver logic to avoid load scene repeatedly\n            return;\n        }\n        this.timer += dt;\n    },\n\n});"]}